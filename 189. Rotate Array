class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        k %= n; // To handle cases where k is larger than the array size
        
        // To store the rotated elements
        vector<int> temp(nums.begin() + n - k, nums.end());
        
        // Shift the elements to the right by k positions
        for (int i = n - 1; i >= k; --i) {
            nums[i] = nums[i - k];
        }
        
        // Copy the rotated elements to the beginning of the array
        for (int i = 0; i < k; ++i) {
            nums[i] = temp[i];
        }
    }
};

// 2nd solution
class Solution {
public:
    void rotate(vector<int>& nums, int k) {
         
         vector<int> temp(nums.size());
         for(int i = 0; i< nums.size(); i++){
            temp[(i+k)%nums.size()] = nums[i];
         }
         nums = temp;
    }
};

